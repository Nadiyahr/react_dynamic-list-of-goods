{"version":3,"sources":["components/List.tsx","components/LoadingError.tsx","api/goods.ts","components/Loader.tsx","App.tsx","index.tsx"],"names":["List","goods","map","good","style","color","className","name","id","LoadingError","wait","delay","Promise","res","setTimeout","getAll","a","fetch","then","response","ok","Error","status","statusText","json","get5First","sort","b","localeCompare","slice","getRedGoods","filter","g","Loader","App","state","goodsList","loading","error","loadGoods","goodsFromServer","setState","this","type","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"6SAMaA,EAAwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEtC,OACE,mCACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEC,MAAOF,EAAKE,OACrBC,UAAU,YAHZ,SAKGH,EAAKI,MAJDJ,EAAKK,UCTPC,G,MAAyB,kBACpC,qBAAKH,UAAU,eAAf,+C,MCDF,SAASI,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAKF,MAGrC,IAAMI,EAAM,uCAAG,sBAAAC,EAAA,sEACdN,EAAK,KADS,gCAGbO,MATI,yEAURC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,WATA,2CAAH,qDAaNC,EAAY,WACvB,OAAOV,IACJG,MAAK,SAAAjB,GAGJ,OAFAA,EAAMyB,MAAK,SAACV,EAAGW,GAAJ,OAAUX,EAAET,KAAKqB,cAAcD,EAAEpB,SAErCN,EAAM4B,MAAM,EAAG,OAIfC,EAAc,WACzB,OAAOf,IACJG,MAAK,SAAAjB,GAAK,OAAIA,EAAM8B,QAAO,SAAAC,GAAC,MAAgB,QAAZA,EAAE3B,aC5B1B4B,G,MAAmB,WAC9B,OACE,qBAAK3B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,WAChB,sBAAMA,UAAU,WAChB,sBAAMA,UAAU,WAChB,sBAAMA,UAAU,kBCKlB4B,E,4MACJC,MAAe,CACbC,UAAW,GACXC,SAAS,EACTC,OAAO,G,EAGTC,U,uCAAY,WAAOC,GAAP,eAAAxB,EAAA,6DACV,EAAKyB,SAAS,CAAEH,OAAO,EAAOD,SAAS,IAD7B,kBAGYG,IAHZ,OAGFvC,EAHE,OAKR,EAAKwC,SAAS,CAAEL,UAAWnC,EAAOqC,OAAO,EAAOD,SAAS,IALjD,gDAOR,EAAKI,SAAS,CAAEH,OAAO,EAAMD,SAAS,IAP9B,yD,kGAWZ,WAAU,IAAD,OACP,EAEIK,KAAKP,MADPC,EADF,EACEA,UAAWE,EADb,EACaA,MAAOD,EADpB,EACoBA,QAGpB,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,sBAAKA,UAAU,YAAf,UACE,wBACEqC,KAAK,SACLrC,UAAU,WACVsC,QAAS,kBAAM,EAAKL,UAAUxB,IAHhC,2BAOA,wBACE4B,KAAK,SACLrC,UAAU,WACVsC,QAAS,kBAAM,EAAKL,UAAUd,IAHhC,yBAOA,wBACEkB,KAAK,SACLrC,UAAU,WACVsC,QAAS,kBAAM,EAAKL,UAAUT,IAHhC,6BAQF,qBAAIxB,UAAU,YAAd,UACGgC,GAAS,cAAC,EAAD,KACRA,IAAUD,EAAU,cAAC,EAAD,IAAa,cAAC,EAAD,CAAMpC,MAAOmC,e,GAnDxCS,aA0DHX,ICtEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23d5c375.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const List: React.FC<Props> = ({ goods }) => {\n  // const { id, name, color, } = goods;\n  return (\n    <>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n          className=\"App__item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport './LoadingError.scss';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification\">\n    Something went wrong. Try again\n  </div>\n);\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nfunction wait(delay: number) {\n  return new Promise(res => setTimeout(res, delay));\n}\n\nexport const getAll = async (): Promise<Good[]> => {\n  await wait(500);\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      goods.sort((a, b) => a.name.localeCompare(b.name));\n\n      return goods.slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(g => g.color === 'red'));\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"box\">\n      <div className=\"container\">\n        <span className=\"circle\" />\n        <span className=\"circle\" />\n        <span className=\"circle\" />\n        <span className=\"circle\" />\n      </div>\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport { List } from './components/List';\nimport { LoadingError } from './components/LoadingError';\nimport './App.scss';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Loader } from './components/Loader';\n// or\n// import * as goodsAPI from './api/goods';\n\ninterface State {\n  goodsList: Good[];\n  loading: boolean;\n  error: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state: State = {\n    goodsList: [],\n    loading: false,\n    error: false,\n  };\n\n  loadGoods = async (goodsFromServer: () => Promise<Good[]>) => {\n    this.setState({ error: false, loading: true });\n    try {\n      const goods = await goodsFromServer();\n\n      this.setState({ goodsList: goods, error: false, loading: false });\n    } catch {\n      this.setState({ error: true, loading: false });\n    }\n  };\n\n  render() {\n    const {\n      goodsList, error, loading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        <div className=\"App__cont\">\n          <button\n            type=\"button\"\n            className=\"App__btn\"\n            onClick={() => this.loadGoods(getAll)}\n          >\n            Get all Goods\n          </button>\n          <button\n            type=\"button\"\n            className=\"App__btn\"\n            onClick={() => this.loadGoods(get5First)}\n          >\n            Get First 5\n          </button>\n          <button\n            type=\"button\"\n            className=\"App__btn\"\n            onClick={() => this.loadGoods(getRedGoods)}\n          >\n            Get only Red\n          </button>\n        </div>\n        <ul className=\"App__list\">\n          {error && <LoadingError />}\n          {!error && (loading ? <Loader /> : <List goods={goodsList} />)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}